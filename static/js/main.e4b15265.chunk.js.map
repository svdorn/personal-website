{"version":3,"sources":["withStyles.js","MyTheme.js","components/Header.js","miscFunctions.js","pages/About.js","pages/Contact.js","components/Button.js","components/Social.js","pages/Home.js","pages/Stocks.js","pages/Tech.js","App.js","serviceWorker.js","index.js"],"names":["ThemedStyleSheet","registerTheme","color","primary","secondary","registerInterface","aphroditeInterface","menuItems","name","link","Header","_this$props","this","props","location","styles","react_default","a","createElement","css","container","react_router_dom","to","Object","assign","terminal","src","alt","menu_items","map","item","key","menu_item","pathname","toString","linkIsActive","link_bold","React","Component","withRouter","withStyles","_ref","padding","display","float","height","social","marginTop","textDecoration","textAlign","fontWeight","opacity",":hover","makeStyle","colors","textColor","background","concat","borderRadius","border","boxShadow","textTransform","components_Button","text","onClick","style","type","Button","objectSpread","icons","href","image_clickable","margin","image","icon","target","rel","people","description","button","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","typedRef","typedSpan","state","options","strings","typeSpeed","backSpeed","loop","loopCount","Infinity","backDelay","setState","typed","Typed","id","intro","typed_container","ref","icon_img","components_Social","backgroundColor","minHeight","verticalAlign","paddingTop","fontSize","position","bottom","right","left","marginLeft","marginRight","paddingRight","_ref2","font","header","react_router_scroll_top_esm","components_Header","react_router","path","exact","component","About","Contact","Stocks","Tech","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4b15265.chunk.js","sourcesContent":["import ThemedStyleSheet from \"react-with-styles/lib/ThemedStyleSheet\";\nimport aphroditeInterface from \"react-with-styles-interface-aphrodite\";\nimport { css, withStyles } from \"react-with-styles\";\n\nimport MyTheme from \"./MyTheme\";\n\nThemedStyleSheet.registerTheme(MyTheme);\nThemedStyleSheet.registerInterface(aphroditeInterface);\n\nexport { css, withStyles, ThemedStyleSheet };\n","export default {\n  color: {\n    primary: \"#f46a54\",\n    secondary: \"#f6e9de\"\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { linkIsActive } from \"../miscFunctions\";\nimport { css, withStyles } from \"../withStyles\";\n\nconst menuItems = [\n  { name: \"About\", link: \"/about\" },\n  { name: \"Tech\", link: \"/tech\" },\n  { name: \"Stocks\", link: \"/stocks\" },\n  { name: \"Contact\", link: \"/contact\" }\n];\n\nclass Header extends React.Component {\n  render() {\n    const { location, styles } = this.props;\n\n    return (\n      <div {...css(styles.container)}>\n        <Link to=\"/\">\n          <img\n            {...css(styles.terminal)}\n            src=\"/images/terminal-white.svg\"\n            alt=\"Terminal\"\n          />\n        </Link>\n        <div {...css(styles.menu_items)}>\n          {menuItems.map(item => (\n            <Link\n              key={item.name}\n              to={item.link}\n              {...css(\n                styles.menu_item,\n                linkIsActive(item.link, location) && styles.link_bold\n              )}\n            >\n              {item.name}\n            </Link>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  styles: PropTypes.object.isRequired\n};\n\nexport default withRouter(\n  withStyles(({ color }) => ({\n    container: {\n      padding: \"10px 20px 20px\"\n    },\n\n    terminal: {\n      display: \"inline-block\",\n      float: \"left\",\n      height: \"50px\"\n    },\n\n    social: {\n      display: \"inline-block\",\n      marginTop: \"13px\",\n      float: \"right\"\n    },\n\n    menu_items: {\n      display: \"flex\",\n      float: \"right\",\n      marginTop: \"20px\"\n    },\n\n    menu_item: {\n      padding: \"0 15px\",\n      textDecoration: \"none\",\n      textAlign: \"left\",\n      color: \"white\",\n      fontWeight: \"600\",\n      opacity: \"0.6\",\n      \":hover\": {\n        opacity: \"0.8\"\n      }\n    },\n\n    link_bold: {\n      fontWeight: \"800\"\n    }\n  }))(Header)\n);\n","function linkIsActive(link, location) {\n  if (!location) return false;\n  else if (location.pathname.toString() === link.toString()) {\n    return true;\n  }\n\n  return false;\n}\n\nexport { linkIsActive };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, withStyles } from \"../withStyles\";\n\nfunction About({ styles }) {\n  return <div>About</div>;\n}\n\nAbout.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(() => ({}))(About);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, withStyles } from \"../withStyles\";\n\nfunction Contact({ styles }) {\n  return <div>Contact</div>;\n}\n\nContact.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(() => ({}))(Contact);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\n// We can use inline-style\nconst makeStyle = (colors, textColor) => ({\n  background: `linear-gradient(45deg, ${colors[0]} 30%, ${colors[1] ||\n    colors[0]} 90%)`,\n  borderRadius: 3,\n  border: 0,\n  color: textColor || \"white\",\n  height: 48,\n  padding: \"0 30px\",\n  boxShadow: \"0 3px 5px 2px rgba(0, 0, 0, 0.18)\",\n  textTransform: \"none\"\n});\n\nexport default ({ colors, text, textColor, onClick, style, type }) => (\n  <Button\n    style={{ ...makeStyle(colors, textColor), ...(style || {}) }}\n    onClick={onClick}\n    type={type || null}\n  >\n    {text}\n  </Button>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, withStyles } from \"../withStyles\";\n\nconst icons = [\n  { name: \"twitter\", href: \"\" },\n  {\n    name: \"linkedin\",\n    href: \"https://www.linkedin.com/in/stephen-dorn-149055a3/\"\n  },\n  { name: \"github\", href: \"https://github.com/svdorn\" },\n  { name: \"facebook\", href: \"https://www.facebook.com/stephen.dorn.1\" },\n  { name: \"instagram\", href: \"https://www.instagram.com/stephen.dorn/\" },\n  { name: \"email\", href: \"mailto:steve@moonshotinsights.com\" }\n];\n\nfunction Social({ styles }) {\n  return (\n    <div {...css(styles.container)}>\n      {icons.map(icon => (\n        <a\n          key={icon.name}\n          href={icon.href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          {...css(styles.image_clickable)}\n        >\n          <img\n            src={`/images/social/${icon.name}.svg`}\n            alt={icon.name}\n            {...css(styles.image)}\n          />\n        </a>\n      ))}\n    </div>\n  );\n}\n\nSocial.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(() => ({\n  container: {\n    display: \"inline-block\"\n  },\n\n  image_clickable: {\n    margin: \"0 5px\",\n    opacity: \"0.4\",\n    \":hover\": {\n      opacity: \"0.6\"\n    }\n  },\n\n  image: {\n    height: \"34px\"\n  }\n}))(Social);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typed from \"typed.js\";\nimport Button from \"../components/Button\";\nimport Social from \"../components/Social\";\nimport { css, withStyles } from \"../withStyles\";\n\nconst people = [\n  {\n    name: \"einstein\",\n    description: \"View my scientific use of computers.\",\n    button: \"View CS\"\n  },\n  {\n    name: \"jobs\",\n    description: \"Examine my entrepreneurial passion.\",\n    button: \"View Entrepreneurship\"\n  },\n  {\n    name: \"jfk\",\n    description: \"See how to operate in the free market.\",\n    button: \"View Stocks\"\n  }\n];\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // strings that show up in the typer\n    const typedStrings = [\n      \"hello my name is <b>Stephen Dorn</b>\",\n      \"i am a computer scientist\",\n      \"stock market enthusiest\",\n      \"and entrepreneur\"\n    ];\n\n    // options for the typer\n    const options = {\n      strings: typedStrings,\n      typeSpeed: 40,\n      backSpeed: 25,\n      loop: true,\n      loopCount: Infinity,\n      backDelay: 1000\n    };\n    this.setState({ typed: new Typed(this.typedSpan, options) });\n  }\n\n  typedRef = typedSpan => (this.typedSpan = typedSpan);\n\n  render() {\n    const { styles } = this.props;\n\n    return (\n      <div {...css(styles.container)}>\n        <section id=\"intro\" {...css(styles.intro)}>\n          <div {...css(styles.typed_container)}>\n            <img\n              src=\"/images/terminal-white.svg\"\n              alt=\"Terminal\"\n              {...css(styles.terminal)}\n            />\n            <span ref={this.typedRef} {...css(styles.typed)} />\n          </div>\n          <div {...css(styles.icons)}>\n            {people.map(icon => (\n              <div key={icon.name} {...css(styles.icon)}>\n                <div {...css(styles.description)}>{icon.description}</div>\n                <img\n                  src={`/images/people/${icon.name}.png`}\n                  alt={icon.name}\n                  {...css(styles.icon_img)}\n                />\n                <br />\n                <Button\n                  text={icon.button}\n                  colors={[\"white\"]}\n                  textColor={[\"#f46a54\"]}\n                />\n              </div>\n            ))}\n          </div>\n          <div {...css(styles.social)}>\n            <Social />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(({ color }) => ({\n  container: {\n    marginTop: \"-80px\"\n  },\n  intro: {\n    backgroundColor: color.primary,\n    minHeight: \"calc(100vh)\"\n  },\n\n  typed_container: {\n    verticalAlign: \"middle\",\n    paddingTop: \"15%\",\n    fontWeight: \"800px\",\n    fontSize: \"44px\",\n    color: \"white\"\n  },\n\n  icons: {\n    position: \"absolute\",\n    color: \"white\",\n    bottom: \"15%\",\n    right: \"0\",\n    left: \"0\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n\n  icon: {\n    display: \"inline-block\",\n    padding: \"0 30px\"\n  },\n\n  icon_img: {\n    padding: \"10px 0\",\n    height: \"120px\"\n  },\n\n  description: {\n    fontSize: \"18px\",\n    fontWeight: \"600\"\n  },\n\n  terminal: {\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    height: \"60px\",\n    paddingRight: \"30px\"\n  },\n\n  typed: {\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  },\n\n  social: {\n    position: \"absolute\",\n    bottom: \"4%\",\n    right: \"0\",\n    left: \"0\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  }\n}))(Home);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, withStyles } from \"../withStyles\";\n\nfunction Stocks({ styles }) {\n  return <div>Home</div>;\n}\n\nStocks.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(() => ({}))(Stocks);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css, withStyles } from \"../withStyles\";\n\nfunction Tech({ styles }) {\n  return <div>Home</div>;\n}\n\nTech.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(() => ({}))(Tech);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ScrollToTop from \"react-router-scroll-top\";\n// import components\nimport Header from \"./components/Header\";\n// import pages\nimport About from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport Home from \"./pages/Home\";\nimport Stocks from \"./pages/Stocks\";\nimport Tech from \"./pages/Tech\";\nimport { css, withStyles } from \"./withStyles\";\n\nfunction App({ styles }) {\n  return (\n    <Router>\n      <ScrollToTop>\n        <Header {...css(styles.header)} />\n        <div {...css(styles.container)}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/stocks\" component={Stocks} />\n          <Route path=\"/tech\" component={Tech} />\n        </div>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nApp.propTypes = {\n  styles: PropTypes.object.isRequired\n};\n\nexport default withStyles(({ color }) => ({\n  container: {\n    textAlign: \"center\",\n    padding: \"50px 0\",\n    font: \"15px intercom-text,system-ui\"\n  },\n\n  header: {\n    backgroundColor: \"transparent\"\n  }\n}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}